pipeline {
    agent any
    
    environment {
        GIT_REPOSITORY_URL = 'https://github.com/PGDAI2005/question1.git'
        DOCKER_IMAGE_NAME = 'pgdai2005_question1'
        IMAGE_TAG = '1.0' // Make sure to use string for tag
        DOCKERHUB_CREDENTIALS = 'my-docker-hub-credentials-id' // Update with your credentials ID
    }
    
        stages {
        stage('Clone Repository') {
            steps {
                // Checkout the Git repository
                script {
                    try {
                        git branch: 'main', url: GIT_REPOSITORY_URL
                    } catch (Exception e) {
                        echo "Failed to clone repository: ${e.message}"
                        error "Failed to clone repository"
                    }
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                // Build Docker image using Dockerfile in repository
                script {
                    try {
                        docker.build(DOCKER_IMAGE_NAME)
                    } catch (Exception e) {
                        echo "Failed to build Docker image: ${e.message}"
                        error "Failed to build Docker image"
                    }
                }
            }
        }
        
        stage('Push to DockerHub') {
            steps {
                // Log in to DockerHub and push Docker image
                script {
                    try {
                        withCredentials([usernamePassword(credentialsId: 'my-docker-hub-credentials-id', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                            docker.withRegistry('https://index.docker.io/v1/') {
sh "echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin docker.io"
                                docker.image(DOCKER_IMAGE_NAME).push(IMAGE_TAG)
                            }
                        }
                    } catch (Exception e) {
                        echo "Failed to push Docker image to registry: ${e.message}"
                        error "Failed to push Docker image"
                    }
                }
            }
        }
    }
}
